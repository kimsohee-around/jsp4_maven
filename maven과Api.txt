1. 빌드 
+ 빌드 : 컴파일부터 최종 소프트웨어 산출물 생성.
   실행에 필요한 모든 것들을 포함하여 만들어야 합니다.
	- 자바 소스파일에서 컴파일된 .class 파일
	- 정적 리소스 : 이미지, html, js, css
	- 외부 라이브러리 클래스들

+ 최종 산출물은 일반적으로 압축파일(패키징-포장)
	.jar : 일반적인 자바 애플리케이션으로 만들어짐. 스프링부트도 포함 
	.war : 서블릿/jsp 웹컨테이너(was)가 처리해야할 애플리케이션.

2. 빌드 도구
maven , gradle 2가지가 가장 많이 쓰입니다.
maven 은 xml 형식의 파일을 사용하고
gradle 은 groovy 언어를 이용하는 형식을 사용합니다.

2. maven web project
+ pom.xml에 빌드와 관련된 정보를 저장합니다.
(Project Object Model)

1) dynamic web project 만들기
2) 프로젝트 우클릭 -> configure -> Convert to Maven Project 
   패키징 필수 확인 : war -> Finish -> pom.xml
3) pom.xml 에 필요한 외부라이브러리 추가 -> 의존성 추가
<dependencies> 태그 안에 필요한 <dependency> 들을 포함시키세요.
알아서 다운로드 받아서 저장소 C:\Users\계정이름\.m2\repository 에 저장합니다.

4) 새로운 의존성을 추가할 때마다 
   프로젝트 이름 우클릭 -> maven -> Update Project  하세요.

/////////////////////////////////////////////////////////

1. 동기식 통신
지금까지는 서버와 통신을 하면 화면이 바뀝니다. 화면은 서버가 보내는 응답(html문서)이고
그래서 응답을 받을 때까지 대기하는 시간이 오래 걸리기도 합니다.
요청과 그에 대한 응답이 오고 그 이후에 새로운 요청을 보낼 수 있는 방식입니다.

2. 비동기식 통신
클라이언트가 서버에 보낸 요청에 대한 응답을 기다리지 않고 새로운 요청을 보낼 수 있습니다.
대표적으로 서버는 rest api 로 데이터(응답)만 제공해 주는 방식으로 동작합니다.
우리도 rest api 를 만들어서 비동기식을 통신을 해보겠습니다.









